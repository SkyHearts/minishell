Current compiller
gcc tokenize.c expander.c env.c parsing.c minishell.c ft_split_quote.c utils.c ../utils/libft/libft.a -fsanitize=address -g3 -lreadline && ./a.out

Example
echo "hello world" >> text | wc -l | cat -> [cmdgroup[0], cmdgroup[1], cmdgroup[3]]
echo "hello world" | wc 
echo "hello world" | wc -l | cat

>> APPEND
<< heredoc

struct cmdgroup
args
rdr
t_pipegroup

Test Command
echo asef | areg | esrg\0		argc = 6	echo,asef,|,areg,|,esrg
"echo asef | areg" | esrg\0		argc = 3	"echo asef | areg",|,esrg
echo asef | "areg | esrg"\0		argc = 4	echo,asef,|,"areg,|,esrg"
echo"test" | wc -l				argc = 4	echo"test",|,wc,-l	
"echo"							argc = 1	"echo"
"echo"'echo'					argc = 1	"echo"'echo'
"echo""echo"					argc = 1	"echo""echo"
"echo"'echo' hello				argc = 2	"echo"'echo',hello

// Item 0
cmdgroup[0].args = (char **)[echo, "hello' world"]
cmdgroup[0].args[0] = echo
cmdgroup[0].args[1] = hello' world
cmdgroup[0].rdr = APPEND;
cmdgroup[0].rdr_filename = "text";

<<eof >text5
cmdgroups[0].rdr_info[0].rdr = HEREDOC
cmdgroup[0].rdr_info[0].rdr_filename = eof
cmdgroups[0].rdr_info[1].rdr = OUT
cmdgroup[0].rdr_info[1].rdr_filename = text5

<	IN = 1,
>	OUT = 2,
<<	HEREDOC = 3,
>>	APPEND = 4,

// Item 1
cmdgroup[1].args = (char **)[wc, -l]
cmdgroup[1].rdr = NULL;
cmdgroup[1].rdr_filename = NULL;

// Item 2
cmdgroup[2].args = (char **)[cat]
cmdgroup[2].rdr = NULL;
cmdgroup[2].rdr_filename = NULL;

// Item 3
cmdgroup[3].args = (char **)[NULL]
cmdgroup[3].rdr = NULL;
cmdgroup[3].rdr_filename = NULL;

main.c
ret = 0  // Success, continue with program
ret = 1 // Empty input so continue loop to obtain new input
ret = 2 // Syntax error, return error msg and continue loop to obtain new input
ret = 3 // Command error, return error msg and continue loop to obtain new input

OR

					pipe
				 /		\
				/		 \
			   /		 cat
			pipe
		 /			\
		/			 \
echo, hello world 		wc, -l

exceve(path, "wc, -l", NULL)

>> > < << 

|

serrsththr\0|\0wegergergrteh\0|\0rsgesfgsef\0|\0dfgerg

echo
else
error


Quotes

"testing'this"		>   testing'this\n\0
"testing'this"and'
this'				>   testing'this\nthis\n\0
"testing'this"and'
>this'				>   testing'this\n\nthis\n\0

echo "adfgaerg'
> aerhergh" '
> arwegseraebr'

line = "adfgaerg'\naerhergh" '\narwegseraebr'\0
line = adfgaerg'\naerhergh \narwegseraebr\0